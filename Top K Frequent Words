class Solution {
    public List<String> topKFrequent(String[] words, int k) {
        HashMap<String,Integer> map = new HashMap<>();
        List<String> ans = new ArrayList<>();
       int n = words.length;
       for(int i=0;i<n;i++){
        map.put(words[i],map.getOrDefault(words[i],0)+1);
       }

       Queue<String> q = new PriorityQueue<>((w1,w2)->map.get(w1).equals(map.get(w2))?
       w2.compareTo(w1): map.get(w1)-map.get(w2));
      

       for(String word : map.keySet()){
        q.add(word);
        if(q.size() > k){
            q.poll();
        }
       }
       while(!q.isEmpty()){
        ans.add(q.poll());
       }
       Collections.reverse(ans);
    return ans;
    }
}
