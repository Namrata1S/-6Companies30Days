class Solution {
    public long maximumSubarraySum(int[] nums, int k) {
        HashMap<Integer,Integer> map = new HashMap<>();
        int n = nums.length;
        long maxsum = 0;
        long winsum = 0;

        for(int i=0;i<n;i++){
            winsum += nums[i];
            map.put(nums[i],map.getOrDefault(nums[i],0)+1);

            if(i >= k){
              winsum -= nums[i-k];
              map.put(nums[i-k],map.get(nums[i-k])-1);
              if(map.get(nums[i-k]) == 0){
                map.remove(nums[i-k]);
              }
            }
            if(i >= k-1 && map.size() == k){
              maxsum = Math.max(winsum,maxsum);
            }
        }


       return maxsum;
    }
} 
